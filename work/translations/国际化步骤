1. 项目根目录下编写配置文件: babel.cfg

    [python: work/**.py]
    [jinja2: work/**.html]

2. 使用pybabel extract命令提取所有待翻译文本

    pybabel extract -F babel.cfg - k _l -o messages.pot .

3. templates同级目录下创建translations文件夹，使用pybabel init命令来为特定的区域创建消息目录

    pybabel init -i messages.pot -d work/translations -l zh_Hans_CN

    每一条要翻译的消息都由三部分组成，示例如下：
    #：消息所在的文件名与代码行数
    msgid "提取出来待翻译的消息正文"
    msgstr "填入翻译文本"

4. 编译MO文件并调试

    pybabel compile -d work/translations

5. 更新翻译

    5.1 如果只更新了po文件的翻译内容，只重新编译消息目录即可

        pybabel compile -d work/translations

    5.2 如果你修改了程序中待翻译文本的原文,或是新标记了其他文本,为了让这些更改生效,你需要重新提取所有文本生成POT文件,然
    后使用pybabel update 命令来执行自动合并和更新,最后编译生成mo文件

        pybabel extract -F babel.cfg -k _l -o messages.pot .
        pybabel update -i messages.pot -d work/translations
        pybabel compile -d work/translations